Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.

题目的另一个意思就是，找出不同的元素，并按顺序放在数组前面，那么：
(1) 数组为空，返回 0
(2) 数组不空，显然去重后数组至少有一个元素(下标0)，下一个元素的插入位置下标1。所以使用两个指针 i、j，都从第2个元素开始。指针 j 记录待插入的位置；指针 i 记录待插入的不重复的元素，具体如下：
    removeDuplicates(nums[0..n-1])
    // 删除数组中重复的元素
    if n=0 return 0
    j ← 1
    for i ← 1 to n do
        if nums[i] ≠ nums[i-1]
            nums[j] ← nums[i]
            j ← j + 1
    end
    return j
时间复杂度为O(n)，空间复杂度为O(1)

